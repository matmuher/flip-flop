In file included from asma.cpp:2:0:
processor.h:33:21: warning: multi-character character constant [-Wmultichar]
 const int MY_SIGN = 'MM';
                     ^
In file included from asma_funks.cpp:2:0:
processor.h:33:21: warning: multi-character character constant [-Wmultichar]
 const int MY_SIGN = 'MM';
                     ^
asma_funks.cpp:133:15: warning: extra tokens at end of #undef directive [enabled by default]
 #undef DEF_CMD(name, id, args_num, code)
               ^
asma_funks.cpp: In function 'int* create_binary(line_buf*, size_t, size_t*)':
asma_funks.cpp:65:57: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
             if (string_equal (code_line.words_ptr, "def"))
                                                         ^
cmd.h: In function 'int* cmd_line_process(parsed_line*, int*, int*, dict)':
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:1:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(hlt,       0, ZERO_ARGS, HLT)
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:3:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(push,      1, ONE_ARG,   PUSH(ARG1))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:5:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(pop,       2, ONE_ARG,   POPR(ARG1))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:7:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(add,       3, ZERO_ARGS, PUSH(POP + POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:9:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(sub,       4, ZERO_ARGS, PUSH(POP - POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:11:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(mlt,       5, ZERO_ARGS, PUSH(POP * POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:13:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(saw,       6, ZERO_ARGS, PUSH(POP / POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:15:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(out,       7, ZERO_ARGS, OUT)
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:17:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(jump,      8, ONE_ARG,   JUMP(ARG1))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:19:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(ja,        9, ONE_ARG,   CONDITION_JUMP(POP > POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:21:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(jb,       10, ONE_ARG,   CONDITION_JUMP(POP < POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:23:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(jae,      11, ONE_ARG,   CONDITION_JUMP(POP >= POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:25:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(in,       12, ZERO_ARGS, IN)
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:27:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(say,      13, ZERO_ARGS, say ("[Meow]"))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:29:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(jbe,      14, ONE_ARG,   CONDITION_JUMP(POP <= POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:31:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(je,       15, ONE_ARG,   CONDITION_JUMP(POP == POP))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:33:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(sayn,     16, ZERO_ARGS, say ("No roots"))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:35:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(sqrt,     17, ZERO_ARGS, PUSH(SQRT(POP)))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:37:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(sayi,     18, ZERO_ARGS, say ("Infinity roots"))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:39:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(vsh,      19, ZERO_ARGS, VM_SHOW)
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:41:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(circ,     20, ZERO_ARGS, CIRC)
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:43:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(make_dot, 21, ZERO_ARGS, MAKE_DOT)
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:45:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(r_cos,    22, ZERO_ARGS, PUSH(R_COS))
 ^
asma_funks.cpp:104:54: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
         if (string_equal (#name, code_line->words_ptr))                      \
                                                      ^
cmd.h:47:1: note: in expansion of macro 'DEF_CMD'
 DEF_CMD(r_sin,    23, ZERO_ARGS, PUSH(R_SIN))
 ^
asma_funks.cpp: In function 'int* arg_process(char*, int*, int*, int, int, dict)':
asma_funks.cpp:138:44: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
     else if (string_equal (str_arg, REG_STR))\
                                            ^
asma_funks.cpp:189:5: note: in expansion of macro 'REG_PROC'
     REG_PROC("ax", 0)
     ^
asma_funks.cpp:138:44: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
     else if (string_equal (str_arg, REG_STR))\
                                            ^
asma_funks.cpp:191:5: note: in expansion of macro 'REG_PROC'
     REG_PROC("bx", 1)
     ^
asma_funks.cpp:138:44: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
     else if (string_equal (str_arg, REG_STR))\
                                            ^
asma_funks.cpp:193:5: note: in expansion of macro 'REG_PROC'
     REG_PROC("cx", 2)
     ^
asma_funks.cpp:138:44: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
     else if (string_equal (str_arg, REG_STR))\
                                            ^
asma_funks.cpp:195:5: note: in expansion of macro 'REG_PROC'
     REG_PROC("dx", 3)
     ^
..\hamlet\d_hamlet_functions.cpp: In function 'void byte_swap(void*, void*, size_t)':
..\hamlet\d_hamlet_functions.cpp:295:39: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
         char temp = *(char*) (first + byte_id);
                                       ^
..\hamlet\d_hamlet_functions.cpp:296:26: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
         *(char*)(first + byte_id) = *(char*) (second + byte_id);
                          ^
..\hamlet\d_hamlet_functions.cpp:296:56: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
         *(char*)(first + byte_id) = *(char*) (second + byte_id);
                                                        ^
..\hamlet\d_hamlet_functions.cpp:297:28: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
         *(char*) (second + byte_id) = temp;
                            ^
..\hamlet\d_hamlet_functions.cpp: In function 'void bubble_sort(void*, size_t, size_t, int (*)(const void*, const void*))':
..\hamlet\d_hamlet_functions.cpp:315:54: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
             int cmp_result = compar (arr + pair_id * elem_size, arr + pair_id * elem_size + elem_size);
                                                      ^
..\hamlet\d_hamlet_functions.cpp:315:81: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
             int cmp_result = compar (arr + pair_id * elem_size, arr + pair_id * elem_size + elem_size);
                                                                                 ^
..\hamlet\d_hamlet_functions.cpp:315:93: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
             int cmp_result = compar (arr + pair_id * elem_size, arr + pair_id * elem_size + elem_size);
                                                                                             ^
..\hamlet\d_hamlet_functions.cpp:318:44: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
                 byte_swap (arr + pair_id * elem_size, arr + (pair_id + 1) * elem_size, elem_size);
                                            ^
..\hamlet\d_hamlet_functions.cpp:318:77: warning: pointer of type 'void *' used in arithmetic [-Wpointer-arith]
                 byte_swap (arr + pair_id * elem_size, arr + (pair_id + 1) * elem_size, elem_size);
                                                                             ^
